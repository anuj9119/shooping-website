name: Build and Deploy to AKS

on:
  push:
    branches:
      - main
    paths-ignore:
      - .github/workflows/*
      - k8s/**

env:
  RESOURCE_GROUP: social-media-group
  AKS_CLUSTER: socialmedia_aks
  ACR_NAME: shoopingreg
  NAMESPACE: shopping

jobs:
  build-and-push-frontend:
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Push Frontend Image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Frontend Docker Image
        run: |
          docker build \
            --file frontend/Dockerfile \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/shoopingfrontend:${{ github.run_id }} \
            frontend/
          
          docker push ${{ env.ACR_NAME }}.azurecr.io/shoopingfrontend:${{ github.run_id }}

  build-and-push-backend:
    name: Build and Push Backend Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Push Backend Image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Backend Docker Image
        run: |
          docker build \
            --file backend/Dockerfile \
            --build-arg DATABASE_URL=${{ secrets.BACKEND_DB_URL }} \
            -t ${{ env.ACR_NAME }}.azurecr.io/shoopingbackend:${{ github.run_id }} \
            backend/
          
          docker push ${{ env.ACR_NAME }}.azurecr.io/shoopingbackend:${{ github.run_id }}

  deploy-to-aks:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    needs:
      - build-and-push-frontend
      - build-and-push-backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AKS_CLUSTER }} \
            --overwrite-existing

      - name: Update image tags in manifests
        run: |
          sed -i "s|image: shoopingfrontend:.*|image: ${ACR_NAME}.azurecr.io/shoopingfrontend:${GITHUB_RUN_ID}|g" k8s/frontend-deployment.yaml
          sed -i "s|image: shoopingbackend:.*|image: ${ACR_NAME}.azurecr.io/shoopingbackend:${GITHUB_RUN_ID}|g" k8s/backend-deployment.yaml

      - name: Deploy Manifests to AKS
        run: |
          kubectl apply -f k8s/mysql-deployment.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f k8s/backend-deployment.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f k8s/frontend-deployment.yaml -n ${{ env.NAMESPACE }}
